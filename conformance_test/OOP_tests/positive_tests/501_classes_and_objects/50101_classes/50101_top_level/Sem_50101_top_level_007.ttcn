/******************************************************************************
 * Copyright (c) ETSI 2020.
 *
 * This file is subject to copyrights owned by ETSI. Non-exclusive permission
 * is hereby granted, free of charge, to copy, reproduce and amend this file
 * under the following conditions: It is provided "as is", without warranty of any
 * kind, expressed or implied.
 * 
 * ETSI shall never be liable for any claim, damages, or other liability arising
 * from its use or inability of use.This permission does not apply to any documentation
 * associated with this file for which ETSI keeps all rights reserved. The present
 * copyright notice shall be included in all copies of whole or part of this
 * file and shall not imply any sub-license right.
 *
 * Modified by: Elemer Lelik
 *
 /*****************************************************************
 ** @author  STF 572
 ** @version 0.0.1
 ** @purpose 5.1.1.0, Ensure that a class can extend an other class.
 ** @verdict pass accept
*****************************************************************/
module Sem_50101_top_level_007 "TTCN-3:2018 Object-Oriented" {

type component GeneralComp{
}

public type class t_class_superclass {
    const integer c_i := 15;

    public function get_ci() return integer {
        return this.c_i;
    }
}

public type class t_class_subclass extends t_class_superclass {
}

testcase TC_Sem_50101_top_level_007() runs on GeneralComp {
    var t_class_subclass v_a := t_class_subclass.create();
    if (v_a.get_ci() == 15) {
        setverdict(pass);
    } else {
        setverdict(fail);
    }
}

control {
    execute(TC_Sem_50101_top_level_007());
}

}
